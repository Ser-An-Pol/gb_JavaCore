import java.util.Arrays;
import java.util.List;

/**
 * Задание 1
 * Задача: Создать класс ”Сотрудник” с полями:
 * ФИО, должность, телефон, зарплата, возраст;
 * ------------------------------------------------------------------
 * Задание 2
 * Задача: Написать функцию выводящую всю доступную информацию об
 * объекте
 * Задание 2**
 * Задача: Написать функцию выводящую всю доступную информацию об объекте с использованием форматирования
 * строк.
 * ------------------------------------------------------------------
 * Задание 3**
 * Задача: Создать массив из 5 сотрудников. Массив должен быть сразу инициализирован и не должно быть создано
 * дополнительных переменных.
 * ------------------------------------------------------------------
 * Задание 4
 * Задача: Создать метод, повышающий
 * зарплату всем сотрудникам старше 45 лет на
 * 5000. Метод должен принимать в качестве
 * параметра массив сотрудников.
 * Задание 4*
 * Задача: Написать тот же метод, но возраст и размер повышения должны быть параметрами метода.
 * Задание 4**
 * Задача: Написать тот же метод в качестве статического в классе сотрудника.
 * ------------------------------------------------------------------
 * Задание 5
 * Задача: Написать методы (принимающие на
 * вход массив сотрудников), вычисляющие
 * средний возраст и среднюю зарплату
 * сотрудников, вывести результаты работы в
 * консоль.
 * ------------------------------------------------------------------
 *  Домашнее задание
 *  1. Решить все задания (в том числе «со звёздочкой»), если они не были решены на
 * семинаре, без ограничений по времени;
 * 2. Написать прототип компаратора - метод внутри класса сотрудника, сравнивающий
 * две даты, представленные в виде трёх чисел гггг-мм-дд, без использования
 * условного оператора.
 * 3. Опишите класс руководителя, наследник от сотрудника. Перенесите статический
 * метод повышения зарплаты в класс руководителя, модифицируйте метод таким
 * образом, чтобы он мог поднять заработную плату всем, кроме руководителей. В
 * основной программе создайте руководителя и поместите его в общий массив
 * сотрудников. Повысьте зарплату всем сотрудникам и проследите, чтобы зарплата
 * руководителя не повысилась.
 */

public class Main {
    public static void main(String[] args) {
        Employee[] employees = {
            new Employee("Курочкин", "Антон", "Леонидович",
                    27, "Учитель химии", "2939799823", 154000,
                    "2022-07-12"),
                    new Employee("Дудочкин", "Леонид", "Васильевич",
                            34, "Учитель физики", "3459892345", 169000,
                            "2017-06-23"),
                    new Employee("Иванов", "Иван", "Петрович",
                            56, "Учитель алгебры", "8784393927", 165000,
                            "2007-07-18"),
                    new Employee("Сидоров", "Василий", "Иванович",
                            53, "Учитель биологии", "6236937592", 157000,
                            "2009-08-16"),
                    new Employee("Петрова", "Анастасия", "Андреевна",
                            32, "Учитель литературы", "6367829483", 158000,
                            "2015-07-28")
        };
        Arrays.stream(employees).forEach(System.out::println);
        Employee.raiseSalaryDependAge(employees, 45, 5000);
        Arrays.stream(employees).forEach(System.out::println);

        System.out.println("Средний возраст: " + Employee.getAverageAge(employees));
        System.out.println("Средняя зарплата: " + Employee.getAverageSalary(employees));

        List<Employee> list = Arrays.asList(employees);
        list.stream().sorted().forEach(System.out::println);

        Employee[] emplMan = new Employee[7];
        emplMan[0] = new Manager("Ветрова", "Елена", "Владимировна",
                43, "Заместитель директора по учебной части", "3930238568", 255000,
                "2006-07-03");
        int i = 1;
        for (Employee employee : employees) emplMan[i++] = employee;
        emplMan[6] = new Manager("Романов", "Виктор", "Николаевич",
                57, "Заместитель директора по воспитательной работе", "8457261694", 274000,
                "2003-09-02");
        Arrays.stream(emplMan).forEach(System.out::println);
        Manager.raiseSalaryNotManager(emplMan, 3000);
        Arrays.stream(emplMan).forEach(System.out::println);
    }
}